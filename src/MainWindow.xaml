<Window x:Class="GoldRush.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GoldRush"
        mc:Ignorable="d"
        Title="Gold Rush" Height="768" Width="1024" ResizeMode="NoResize"
        Name="mainWindow">

    <Window.Background >
        <SolidColorBrush Color="#161e31"/>
    </Window.Background>
    <Window.Resources>
        <Style x:Key="MyCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <!-- change the colors based on the cell value-->
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" Value="-1">
                    <Setter Property="Background" Value="#424769"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" Value="5">
                    <Setter Property="Background" Value="#FFF8B179"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" Value="1">
                    <Setter Property="Background" Value="LightGreen"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" Value="2">
                    <Setter Property="Background" Value="#FF52FB52"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" Value="3">
                    <Setter Property="Background" Value="#FF1FF61F"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--  radio button to choose algorithm -->
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator>
                            <BulletDecorator.Bullet>
                                <Grid Width="14" Height="14">
                                    <Ellipse x:Name="Ellipse" Fill="Transparent" Stroke="#FFF8B179" StrokeThickness="1.5"/>
                                    <Ellipse x:Name="InnerEllipse" Fill="#FFF8B179" Margin="3" Opacity="0"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4" VerticalAlignment="Center" HorizontalAlignment="Left"
                                          RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="InnerEllipse" Property="Opacity" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Label Margin="0,48,0,600" HorizontalContentAlignment="Center" FontFamily="Raleway" FontSize="36" Content="Treasure Hunt Solver" FontWeight="Bold" Background="{x:Null}" Foreground="White" HorizontalAlignment="Center" Width="369"/>
        <Border x:Name="inputGrid" Grid.Column="0" CornerRadius="20" Margin="267,127,267,55">
            <Border.Effect>
                <DropShadowEffect/>
            </Border.Effect>
            <Border.Background>
                <SolidColorBrush Color="#424669" Opacity="0.8"/>
            </Border.Background>
            <Grid Margin="25">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Margin="5" Orientation="Vertical">
                    <Label FontFamily="Raleway" FontSize="24" FontWeight="DemiBold" Foreground="White" Margin="0,0,0,5">Input</Label>
                    <Button FontWeight="Medium" Content="Choose File" Click="Button_Click" Height="40" Width="200" Cursor="Hand" FontFamily="Raleway" HorizontalAlignment="Left" Margin="5,0,0,0">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="5">
                                    <ContentPresenter HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFF8B179" />
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Label x:Name="selectedFileLabel" Content="No file chosen" Foreground="#FFF8B179" />
                </StackPanel>
                <StackPanel Grid.Row="1" Margin="5,0,5,0">
                    <Label Foreground="White" FontSize="24" FontFamily="Raleway" FontWeight="DemiBold" Margin="0,5,0,5">Algorithm</Label>
                    <RadioButton Cursor="Hand" Name="rbBFS" Content="BFS" FontWeight="Normal" FontFamily="Raleway" FontSize="16" IsChecked="True" Margin="5" Foreground="White"/>
                    <RadioButton Cursor="Hand" Name="rbDFS" Content="DFS" Foreground="White" FontFamily="rALEWAY" FontWeight="Normal" FontSize="16" Margin="5"/>
                </StackPanel>
                <Button Grid.Row="2" Width="45" Height="45"  Margin="48,180,48,-100" FontFamily="Raleway" FontSize="16" Click="Visualize">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="50">
                                <ContentPresenter HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFF8B179" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Content>
                        <TextBlock Text="&#8594;" FontSize="24"/>
                    </Button.Content>
                </Button>
            </Grid>
        </Border>
        <Border x:Name="visualizeGrid" Grid.Column="0" CornerRadius="20" Margin="209,127,209,55" Visibility="Collapsed">
            <Border.Effect>
                <DropShadowEffect/>
            </Border.Effect>
            <Border.Background>
                <SolidColorBrush Color="LightGray" Opacity="0.8"/>
            </Border.Background>
            <Grid Margin="25">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" FontFamily="Raleway" FontSize="24" FontWeight="DemiBold" Foreground="White">Output</Label>
                <DataGrid Margin="10" Padding="0" Grid.Row="1" x:Name="myDataGrid" AutoGenerateColumns="True" ItemsSource="{Binding}" HorizontalAlignment="Center" HeadersVisibility="None" IsReadOnly="True" SelectionUnit="FullRow" BorderThickness="0,0,0,0" GridLinesVisibility="None">
                </DataGrid>
                <ToggleButton Grid.Row="2" x:Name="myToggleButton" Content="Show Solution" IsChecked="False"
                Checked="showSolution" Unchecked="showMaze" HorizontalAlignment="Center" Height="40" Width="200" FontFamily="Raleway" Cursor="Hand">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFF8B179" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="#FF4CAF50" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Background" Value="#FFEEEEEE" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
                <Grid Grid.Row="3" Margin="0,15,0,5" HorizontalAlignment="Stretch" Visibility="Collapsed" x:Name="solutionPanel">
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                        <StackPanel Orientation="Horizontal">
                            <Label FontFamily="Raleway" FontSize="14" FontWeight="Medium">Route</Label>
                            <Label x:Name="routeLabel" FontFamily="Raleway" FontSize="14" FontWeight="Normal">-</Label>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label FontFamily="Raleway" FontSize="14" FontWeight="Medium">Nodes</Label>
                            <Label x:Name="numOfNodesLabel" FontFamily="Raleway" FontSize="14" FontWeight="Normal">-</Label>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Right">
                        <StackPanel Orientation="Horizontal">
                            <Label FontFamily="Raleway" FontSize="14" FontWeight="Medium">Steps</Label>
                            <Label x:Name="stepsLabel" FontFamily="Raleway" FontSize="14" FontWeight="Normal">-</Label>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label FontFamily="Raleway" FontSize="14" FontWeight="Medium">Execution Time</Label>
                            <Label x:Name="executionTimeLabel" FontFamily="Raleway" FontSize="14" FontWeight="Normal">-</Label>
                        </StackPanel>
                    </StackPanel>
                </Grid>
                <Button Grid.Row="4"  Width="196" Height="45" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Arial" FontSize="8" Click="ShowInput" Background="Transparent" Cursor="Hand">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="50">
                                <ContentPresenter HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Content>
                        <TextBlock Text="&#x2190; Back" FontSize="12" Width="195"/>
                    </Button.Content>
                </Button>
            </Grid>
        </Border>
        <Popup x:Name="myPopup" IsOpen="False" PlacementTarget="{Binding ElementName=mainWindow}" Placement="Center" Opacity="0.6">
            <Border Background="LightGray"  Width="300" Height="200" CornerRadius="20" Opacity="0.6">
                <TextBlock Text="No file chosen yet!" Foreground="#FFFF3333" FontWeight="Bold" FontSize="16" FontFamily="Raleway" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <Popup.Style>
                <Style TargetType="Popup">
                    <Setter Property="AllowsTransparency" Value="True"/>
                    <Setter Property="PopupAnimation" Value="Fade"/>
                </Style>
            </Popup.Style>
        </Popup>

    </Grid>
</Window>
